I. SetTimeout:
- Là 1 phương thức được cung cấp bởi JS cho phép ta thực hiện hàm callback sau 1 khoảng thời gian cụ thể 
- Cú pháp:
setTimeout(callback, delay, [...args])
trong đó:
    + callback: hàm gọi lại được thực hiện
    + delay: khoảng thời gian delay sau đó hàm callback được thực hiện
    + [...args]: các đối số được truyền vào hàm callback
==> Trả về 1 ID duy nhất
==> Có thể được sử dụng để hủy bỏ hàm callback bằng cách sử dụng hàm clearTimeout(timeoutId):
VD:
function greet(name){
    console.log(`Hello, ${name}`);
}

const timeoutId = setTimeout(greet, 1000, 'John');
clearTimeout(timeoutId);

- Các trường hợp sử dụng:
    + Hiển thị 1 thông báo
    + Thực hiện 1 yêu cầu API
    + Bắt đầu 1 hoạt động định kỳ ...

II. SetInterval()
- Là 1 phương thức được sử dụng để thực hiện 1 hàm callback lặp đi lặp lại sau 1 khoảng thời gian cụ thể
- Cú pháp:
setInterval(callback, delay, [...args])
trong đó:
    + callback: hàm callback được thực hiện lặp đi lặp lại sau khoảng thời gian delay 
    + delay: khoảng thời gian miliseconds giữa mỗi lần gọi hàm callback
    + [...args]: các đối số được truyền vào hàm callback
==> Trả về 1 ID duy nhất 
==> Có thể sử dụng ID này để dừng hoạt động định kỳ bằng cách gọi clearInterval(id)
VD:
let count = 0;

function incrementCount() {
  count++;
  console.log(`Count: ${count}`);
}

const intervalId = setInterval(incrementCount, 1000);
setTimeout(() => {
  clearInterval(intervalId);
  console.log('Interval cleared');
}, 5000);