FUNCTIONS - HÀM
- Cú pháp:
+ Khởi tạo hàm:
function nameFunction(param1, param2, ..., paramN){
    // body
}

+ Gọi hàm: nameFunction(value1, value2, ..., valueN);


VD:
function showMsg(){
    alert("Hello everyone!");
}

showMsg();

1. Biến cục bộ:
- 1 biến được khai báo bên trong hàm và chỉ có thể sử dụng được bên trong hàm đó
VD:
function showMsg(){
    let msg = "Hello, World!";
    alert(msg);
}

showMsg(); // Hello, World!
alert(msg); // Error 

2. Biến ngoài hàm:
- 1 hàm có thể truy cập được những biến ở ngoài hàm 
VD:
let userName = 'John';

function showMessage() {
  let message = 'Hello, ' + userName;
  alert(message);
}

showMessage(); // Hello, John

3. Tham số mặc định:

4. Biểu thức hàm:

5. Hàm callback:
- Hàm callback là 1 tham số trong hàm, mà tham số đó lại là 1 hàm 
VD:
function ask(question, yes, no){
    if(confirm(question)) yes();
    else no();
}

function showOk(){
    alert("Agreed");
}

function showCancel(){
    alert("Canceled");
}

ask("Do you agree?", showOk, showCancel);

6. Hàm trong khối:
- Khi 1 hàm được khai báo trong 1 khối lệnh nào đó, nó chỉ có thể được sử dụng trong khối đó chứ không thể sử dụng ở bên ngoài phạm vi đó
VD:
let age = 18;
if (age < 18){
    welcome();
    function welcome(){
        alert("Hello!");
    }
    welcome(); // Hello
}else {
    function welcome(){
        alert("Greeting");
    }
}

welcome(); // Error
